{"version":3,"sources":["components/Navbar.js","components/TextForms.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","About","onClick","Togglemode","html","for","TextForms","useState","text","setext","heading","value","onChange","event","target","rows","newText","toUpperCase","Showalert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","Alert","word","alert","role","types","charAt","slice","msg","App","setmode","setalert","message","setTimeout","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mKAOe,SAASA,EAAOC,GAC7B,OACE,qBACEC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MADtE,SAGE,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAcE,KAAK,IAAhC,SACGH,EAAMI,QAET,wBACEH,UAAU,iBACVI,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SAEE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,oBAIF,oBAAIF,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWE,KAAK,IAA7B,SACGH,EAAMO,aAgBb,sBAAKN,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACE,uBACED,UAAU,mBACVI,KAAK,WACLG,QAASR,EAAMS,WACfH,GAAG,2BAEL,uBACEL,UAAU,mBACVS,MAAI,EACJC,IAAI,yBAHN,yCC1DG,SAASC,EAAUZ,GAAQ,IAAD,EAsCrC,EAAuBa,qBAAvB,mBAAOC,EAAP,KAAaC,EAAb,KACF,OACE,qCACA,sBAAKd,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,UACI,6BAAKD,EAAMgB,UACb,0BAAUf,UAAU,eAAegB,MAAOH,EAAMI,SArB/B,SAACC,GAElBJ,EAAOI,EAAMC,OAAOH,QAmBsDX,GAAG,QAAQe,KAAK,SAE5F,wBAAQpB,UAAU,uBAAsBO,QA7CtB,WAEhB,IAAIc,EAAO,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAMS,cACpBR,EAAOO,GACPtB,EAAMwB,UAAU,2BAA2B,cAyC7C,kCACA,wBAAQvB,UAAU,uBAAsBO,QAvCtB,WAElB,IAAIc,EAAO,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAMW,cACpBV,EAAOO,GACPtB,EAAMwB,UAAU,0BAA0B,eAmC1C,kCACA,wBAAQvB,UAAU,uBAAsBO,QAjC1B,WAGhBO,EADe,IAEff,EAAMwB,UAAU,eAAe,cA6B7B,mBACA,wBAAQvB,UAAU,uBAAsBO,QAtBzB,WACf,IAAIM,EAAOY,SAASC,eAAe,SACnCb,EAAKc,SACLC,UAAUC,UAAUC,UAAUjB,EAAKG,OACnCjB,EAAMwB,UAAU,UAAU,cAkB1B,kBACA,wBAAQvB,UAAU,uBAAsBO,QAhBjB,WACvB,IAAIc,EAAO,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAMkB,MAAM,QAC1BjB,EAAOO,EAAQW,KAAK,OAcpB,iCAEF,sBAAKhC,UAAU,iBAAf,UACE,mDACA,qCAAIa,QAAJ,IAAIA,OAAJ,EAAIA,EAAMkB,MAAM,KAAKE,OAArB,gCAAmDpB,QAAnD,IAAmDA,OAAnD,EAAmDA,EAAMoB,UACzD,8BAAI,YAAKpB,QAAL,IAAKA,GAAL,UAAKA,EAAMkB,MAAM,YAAjB,aAAK,EAAkBE,QAA3B,mBACA,yCACA,6BAAQ,OAAJpB,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,QAAO,EAAEpB,EAAK,6CDoB9Bf,EAAOoC,aAAe,CACpB/B,MAAO,wBACPG,MAAO,wBE3DM6B,MApBd,SAAepC,GAEb,IAAkBqC,EAInB,OAGIrC,EAAMsC,OAAS,sBAAKrC,UAAU,kDAAkDsC,KAAK,QAAtE,UAGf,kCAVeF,EAUKrC,EAAMsC,MAAME,MARzBH,EAAKI,OAAO,GAAGlB,cAAcc,EAAKK,MAAM,MAKhC,IAGmC1C,EAAMsC,MAAMK,QCNrD,SAASC,IACtB,MAAwB/B,mBAAS,SAAjC,mBAAOX,EAAP,KAAa2C,EAAb,KACA,EAA0BhC,mBAAS,MAAnC,mBAAOyB,EAAP,KAAcQ,EAAd,KAEMtB,EAAY,SAACuB,EAAS1C,GAC1ByC,EAAS,CACPH,IAAKI,EACLP,MAAOnC,IAET2C,YAAW,WACTF,EAAS,QACR,MAgBL,OACE,qCAGI,cAAC/C,EAAD,CACEK,MAAM,YACNG,MAAM,QACNL,KAAMA,EACNO,WAtBW,WACJ,UAATP,GACF2C,EAAQ,QACRnB,SAASuB,KAAKC,MAAMC,gBAAkB,OACtC3B,EAAU,6BAA8B,WACxCE,SAAStB,MAAQ,wBAGjByC,EAAQ,SACRnB,SAASuB,KAAKC,MAAMC,gBAAkB,QACtC3B,EAAU,8BAA+B,WACzCE,SAAStB,MAAQ,4BAaf,iCACE,cAAC,EAAD,CAAOkC,MAAOA,MAEhB,qBAAKrC,UAAU,iBAAf,SAOQ,cAACW,EAAD,CACEY,UAAWA,EACXR,QAAQ,mCCzD1B,IAYeoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnB,EAAD,MAEFlB,SAASC,eAAe,SAM1ByB,K","file":"static/js/main.fd8da463.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n// import { Router } from \"workbox-routing\";\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\"href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n           \r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                {props.About}\r\n              </a>\r\n            \r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\"> */}\r\n          {/* <input */}\r\n          {/* className=\"form-control me-2\" */}\r\n          {/* type=\"search\" */}\r\n          {/* placeholder=\"Search\" */}\r\n          {/* aria-label=\"Search\" */}\r\n          {/* /> */}\r\n          {/* <button className=\"btn btn-outline-success\" type=\"submit\"> */}\r\n          {/* Search */}\r\n          {/* </button> */}\r\n          {/* </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              onClick={props.Togglemode}\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              html\r\n              for=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enabel Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  About: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Write Your Title Here\",\r\n  About: \"Write About Yourself\",\r\n};\r\n","import React,{useState} from \"react\";\r\n\r\nexport default function TextForms(props) {\r\n    const handleUpclick=()=>{\r\n        // console.log('Uppercase was Clicked ' + text);\r\n        let newText = text?.toUpperCase();\r\n        setext(newText);\r\n        props.Showalert(\"converted to uppercase! \",\"Sucessful\")\r\n    }\r\n\r\n    const handleLoclick=()=>{\r\n      // console.log('Uppercase was Clicked ' + text);\r\n      let newText = text?.toLowerCase();\r\n      setext(newText);\r\n      props.Showalert(\"converted to lowercase!\",\"Sucessful \")\r\n  }\r\n\r\n  const handleClear=()=>{\r\n    // console.log('Uppercase was Clicked ' + text);\r\n    let newText = ('');\r\n    setext(newText);\r\n    props.Showalert(\"Clear words!\",\"Sucessful\")\r\n    \r\n}\r\n\r\n    const handleOnchange=(event)=>{\r\n        // console.log('Onchange');\r\n        setext(event.target.value);\r\n    }\r\n    const handlecopy=()=>{\r\n      var text = document.getElementById('mybox')\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.Showalert(\"Copied!\",\"Sucessful\")\r\n    }\r\n\r\n    const handleExtraspaces =()=>{\r\n      let newText = text?.split(/[ ]+/);\r\n      setext(newText.join(' '))\r\n    }\r\n    const [text, setext] = useState();\r\n  return ( \r\n    <> \r\n    <div className=\"conatiner\">\r\n      <div className=\"mb-3\">\r\n          <h1>{props.heading}</h1>\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnchange} id=\"mybox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\"onClick={handleUpclick}>Convert To Uppercase</button>\r\n      <button className=\"btn btn-primary mx-1\"onClick={handleLoclick}>Convert To Lowercase</button>\r\n      <button className=\"btn btn-primary mx-1\"onClick={handleClear}>Clear</button>\r\n      <button className=\"btn btn-primary mx-1\"onClick={handlecopy}>Copy</button>\r\n      <button className=\"btn btn-primary mx-1\"onClick={handleExtraspaces}>DeleteExtraSpace</button>\r\n    </div>\r\n    <div className=\"container my-3\">\r\n      <h1>Your Text Summary</h1>\r\n      <p>{text?.split(\" \").length} words and characters {text?.length}</p>\r\n      <p>{0.08*text?.split(\" \")?.length} Minutes Read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text?.length>0?text:'Enter your Text to Preview it here'}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n function Alert(props) {\r\n  \r\n   const Capitalize=(word)=>{\r\n       \r\n      return word.charAt(0).toUpperCase()+word.slice(1);\r\n   }\r\n  return (\r\n    \r\n      \r\n      props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n      \r\n      \r\n      <strong>{Capitalize(props.alert.types)}</strong>:{props.alert.msg}\r\n\r\n     \r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default Alert","import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForms from \"./components/TextForms\";\nimport Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n//  import About from './components/About';\n\nexport default function App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n\n  const Showalert = (message, type) => {\n    setalert({\n      msg: message,\n      types: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n  const Togglemode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      Showalert(\"Dark Mode has been enabled\", \"Success\");\n      document.title = \"TextUtils-Dark Mode\";\n    \n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      Showalert(\"Light Mode has been enabled\", \"Success\");\n      document.title = \"TextUtils-Light Mode \";\n    }\n  };\n  return (\n    <>\n      \n        {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          About=\"About\"\n          mode={mode}\n          Togglemode={Togglemode}\n        />\n        <strong>\n          <Alert alert={alert} />\n        </strong>\n        <div className=\"container my-3\">\n        \n            {/* <Switch> */}\n              {/* <Route exact path=\"/about\"> */}\n                {/* <About /> */}\n              {/* </Route> */}\n              {/* <Route exact path=\"/\"> */}\n                <TextForms\n                  Showalert={Showalert}\n                  heading=\"Enter The Text To analyze\"\n                />\n              {/* </Route> */}\n            {/* </Switch> */}\n            </div>\n          {/* </Router> */}\n         \n\n          {/* <About/> */}\n       \n      \n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}